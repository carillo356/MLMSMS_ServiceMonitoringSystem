@{
    ViewBag.Title = "MLM Homepage";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<body class="bgcolor">
    <!-- Nav Bar with Responsive -->
    <header>
        <div class="container-fluid">
            <div class="navb-name">
                MLM Service Monitoring System
            </div>

            <div class="navb-items d-none d-xl-flex">
                <div class="menu-item">
                    <a href="@Url.Action("Index","Home")" class="navbar active">Home</a>
                </div>

                <div class="menu-item">
                    <a href="@Url.Action("Users","Home")" class="navbar">Users</a>
                </div>

                <div class="item-button">
                    <a href="@Url.Action("Logout","Home")" type="button">Logout</a>
                </div>
            </div>

            <!-- Button trigger modal (Responsive) -->
            <div class="mobile-toggler d-lg-none">
                <a href="#" data-bs-toggle="modal" data-bs-target="#navbModal">
                    <i class="bi bi-list"></i>
                </a>
            </div>

            <!-- Modal (Responsive) -->
            <div class="modal fade" style="width: 500px;" id="navbModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="title">MLM Service Monitoring System</div>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
                        </div>

                        <div class="modal-body">
                            <div class="modal-line">
                                <a href="@Url.Action("Index","Home")" class="btn btn-primary"><i class="bi bi-house"></i>Home</a>
                            </div>

                            <div class="modal-line">
                                <a href="@Url.Action("Users","Home")" class="btn btn-primary"><i class="bi bi-bell"></i>Users</a>
                            </div>

                            <a href="@Url.Action("Logout","Home")" class="navb-button" type="button">Logout</a>
                        </div>

                        <div class="mobile-modal-footer">
                            <a target="_blank" href="#"><i class="bi bi-instagram"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-linkedin"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-youtube"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-facebook"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Dropdown menu in selecting no. of rows for Log History Table -->
    <div id="logHistory-modal" class="modal">
        <div class="modal-servicelogs">
            <span class="close">&times;</span>
            <div class="service_title">Log History</div>
            <div class="service_name mb-2 fst-italic"></div>

            <table class="table" id="popupTable">
                <thead>
                    <tr class="border-4 border-dark">
                        <th scope="col" style="width: 25%;">LAST START</th>
                        <th scope="col" style="width: 20%;">LAST LOG</th>
                        <th scope="col">STATUS</th>
                        <th scope="col" style="width: 25%;">HOST NAME</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- table content goes here -->
                </tbody>
            </table>
            <div class="container">
                <div class="row">
                    <div class="col-md-3">
                        <div class="select-menu">
                            <div class="select-btn1">
                                <span class="sBtn-text">Select row</span>
                                <i class="bi bi-arrow-down-short"></i>
                            </div>

                            <ul class="options_ServiceRow">
                                <li class="option">
                                    <span class="option-text">10 rows</span>
                                </li>
                                <li class="option">
                                    <span class="option-text">20 rows</span>
                                </li>
                                <li class="option">
                                    <span class="option-text">30 rows</span>
                                </li>
                                <li class="option">
                                    <span class="option-text">40 rows</span>
                                </li>
                                <li class="option">
                                    <span class="option-text">All rows</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="hint-logText">Page <b id="current-logPage"></b> out of <b id="total-logPages"></b></div>
                    </div>
                    <div class="col-md-5">
                        <div class="paginationLogs">
                            <ul>
                                <!--pages or li are comes from javascript -->
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Adding Service with Checkbox Modal -->
    <div class="modal fade" id="displayService-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-center" id="exampleModalLabel">Add Services</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="d-flex justify-content-left">
                        <form onsubmit="event.preventDefault();" class="d-flex align-items-center mb-0">
                            <div class="form-group m-3" style="width: 100%;">
                                <input type="text" name="ServiceName" class="form-control search-box" autocomplete="off" placeholder="Search" />
                            </div>
                        </form>
                    </div>
                    <div class="list-group">
                        <div id="serviceCheckboxes"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary custom-button" id="btnAddService" onclick="submitForm()" data-bs-dismiss="modal">Add</button>
                    <button type="button" class="btn btn-secondary custom-button" id="btnCancelService" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Service Table Modal -->
    <div class="container-xl">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-6">
                            <h2><b>List of Services</b></h2>
                        </div>
                        <div class="col-sm-6 button-container">
                            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#displayService-modal"><i class="bi bi-plus-circle"></i><span>Add Services</span></button>
                            <button type="button" class="btn btn-success" onclick="ServicesInMonitor();"><i class="bi bi-arrow-clockwise"></i><span>Refresh List</span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-hover" id="serviceTable">
            <thead>
                <tr>
                    <th scope="col" style="width: 15%;">SERVICE NAME</th>
                    <th scope="col" style="width: 15%;">LAST START</th>
                    <th scope="col" style="width: 12%;">LAST LOG</th>
                    <th scope="col" style="width: 12%;">SERVICE STATUS</th>
                    <th scope="col" style="width: 15%;">ACTION BY</th>
                    <th scope="col" style="width: 15%;">ACTION</th>
                </tr>
            </thead>
            <tbody>
                <!-- table content goes here -->
            </tbody>
        </table>
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="serviceRow">
                        <div class="btnRow">
                            <span class="sBtnRow">Select row</span>
                            <i class="bi bi-arrow-down-short"></i>
                        </div>

                        <ul class="optionsRow">
                            <li class="optionRow">
                                <span class="optionRow-text">5 rows</span>
                            </li>
                            <li class="optionRow">
                                <span class="optionRow-text">10 rows</span>
                            </li>
                            <li class="optionRow">
                                <span class="optionRow-text">15 rows</span>
                            </li>
                            <li class="optionRow">
                                <span class="optionRow-text">20 rows</span>
                            </li>
                            <li class="optionRow">
                                <span class="optionRow-text">All rows</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <div class="hint-text">Page <b id="current-page"></b> out of <b id="total-pages"></b></div>
                </div>
                <div class="col-md-5">
                    <div class="pagination paginationService">
                        <ul>
                            <!--pages or li are comes from javascript -->
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Design for any ACTION-->
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="liveToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-body">
            </div>
        </div>
    </div>


    <!-- Alert Box for all buttons in Action column -->
    <div id="alert-modal" class="modal">
        <div class="modal-content">
            <div id="modal-title">System Message</div>
            <div id="modal-message"></div>
            <div class="modal-buttons">
                <button type="button" id="btnYes" name="Yes" onclick="btnYes_Click" class="alert-buttons">Yes</button>
                <button type="button" id="btnNo" name="No" onclick="btnNo_Click" class="alert-buttons">No</button>
            </div>
        </div>
    </div>

    <script src="~/JS_Scripts/index/clearField_submitForm.js"></script>
    <script src="~/JS_Scripts/index/dropdown_logHistory_serviceTable.js"></script>
    @*<script src="~/JS_Scripts/index/pagination_serviceTable.js"></script>
    <script src="~/JS_Scripts/index/restart_delete_modal.js"></script>
    <script src="~/JS_Scripts/index/navBar_active.js"></script>
    <script src="~/JS_Scripts/index/add_remove_service.js"></script>
    <script src="~/JS_Scripts/index/pagination_logHistory.js"></script>
    <script src="~/JS_Scripts/index/serviceTable_logHistory.js"></script>
    <script src="~/JS_Scripts/index/checkboxFunction.js"></script>*@


</body>

<script>
    let ITEMS_PER_PAGE = 5;

    $(document).ready(SynchServiceTB);

    function ServicesAvailable() {
        return GetServicesInController()
            .then(function (servicesInController) {
                Checkbox(servicesInController);
            })
            .catch(function (error) {
                alert(error);
            });
    }


    function SynchServiceTB() {
        ServicesInMonitor()
            .then(function () {
                return ServicesAvailable();
            })
            .then(function () {
                var optionText = $(this).find('.optionRow-text').text();
                if (optionText === "All rows") {
                    getMonitoredServicesCount().then(function (totalMonitoredServices) {
                        ITEMS_PER_PAGE = totalMonitoredServices;
                    })
                }
            })
            .then(function () {
                showPageServiceTB(1);
            })
            .catch(function (error) {
                alert(error);
            });
    }

    // Set up the event listener for options
    $('.optionsRow li').click(function () {
        var optionText = $(this).find('.optionRow-text').text();
        if (optionText === "All rows") {
            getMonitoredServicesCount().then(function (totalMonitoredServices) {
                ITEMS_PER_PAGE = totalMonitoredServices;
                SynchServiceTB();
            }).catch(function (error) {
                alert('Failed to get the total number of monitored services.', error);
            });
        } else {
            ITEMS_PER_PAGE = parseInt(optionText);
            SynchServiceTB();
        }
    })

    function ServicesInMonitor() {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: '/Home/ServicesInMonitor',
                type: 'GET',
                dataType: 'json',
                success: function (result) {
                    $("#serviceTable tbody").empty();

                    // Loop through the data and append each row to the table
                    result.forEach(function (Data) {
                        var limit = 999;
                        if (Data.ServiceStatus === "Running")
                            statusText = '<span style="color:green">Running</span>'
                        else if (Data.ServiceStatus === "Stopped")
                            statusText = '<span style="color:red">Stopped</span>'
                        else
                            statusText = "";

                        var row = "<tr data-toggle='modal' data-target='#service-modal'>";
                        row += "<td onclick='handleRowClick(\"" + Data.ServiceName + "\", \"" + limit + "\")'>" + Data.ServiceName + "</td>";
                        row += "<td onclick='handleRowClick(\"" + Data.ServiceName + "\", \"" + limit + "\")'>" + Data.LastStart + "</td>";
                        row += "<td onclick='handleRowClick(\"" + Data.ServiceName + "\", \"" + limit + "\")'>" + Data.LastEventLog + "</td>";
                        row += "<td onclick='handleRowClick(\"" + Data.ServiceName + "\", \"" + limit + "\")'>" + statusText + "</span></td>";
                        row += "<td onclick='handleRowClick(\"" + Data.ServiceName + "\", \"" + limit + "\")'>" + Data.HostName + "</td>";
                        row += "<td>";

                        if (Data.ServiceStatus === "Stopped") {
                            row += "<button class='action-button' style='margin-right: 5px;'; id='btnRun' onclick='handleServiceAction(\"" + Data.ServiceName + "\", \"start\")'>Run</button>";
                        } else if (Data.ServiceStatus === "Running") {
                            row += "<button class='action-button' style='display:none;' id='btnRun' onclick='handleServiceAction(\"" + Data.ServiceName + "\", \"start\")'>Run</button>";
                            row += "<button class='action-button' id='btnStop' onclick='handleServiceAction(\"" + Data.ServiceName + "\", \"stop\")'>Stop</button>";
                            row += "<button class='action-button ms-2' id='btnRestart' onclick='handleServiceAction(\"" + Data.ServiceName + "\", \"restart\")'>Restart</button>";
                        } row += "<button class='action-button' id='btnDelete' onclick='RemoveAddedService(\"" + Data.ServiceName + "\", \"delete\")'>Delete</button>";
                        row += "</td></tr>";
                        $("#serviceTable tbody").append(row);
                    });
                    resolve();
                },
                error: function () {
                    reject("Failed to refresh services.");
                }
            });
        });

    }

    function GetServicesInController() {
        var servicesInTable = [];
        $('#servicesTable tbody tr').each(function () {
            servicesInTable.push($(this).find('td:first').text());
        });

        return new Promise(function (resolve, reject) {
            $.ajax({
                url: "/Home/GetServicesInController",
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(servicesInTable),
                success: function (result) {
                    resolve(result);
                },
                error: function (xhr, textStatus, errorThrown) {
                    reject('Error getting service names');
                }
            });
        });
    }

    function Checkbox(servicesInController) {
        if (servicesInController.length > 0) {
            var checkboxes = '';
            $.each(servicesInController, function (i, item) {
                if (!$('#servicesTable td:contains(' + item + ')').length) { // Check if the service is already in the table
                    var checkbox = `<li class="item"><div class="form-check">
            <input class="form-check-input" type="checkbox" value="${item}" id="service-${i}">
                <label class="form-check-label" for="service-${i}">${item}</label>
        </div></li>`;
                    checkboxes += checkbox;
                }
            });
            $('#serviceCheckboxes').html(checkboxes);
        }
    }

    $('#searchService').on('input', function () {
        var searchText = $(this).val().toLowerCase();
        $('.form-check-label').each(function () {
            var label = $(this).text().toLowerCase();
            $(this).closest('.item').toggle(label.includes(searchText));
        });
    });

    $('input[name="ServiceName"]').on('input', function () {
        var filter = $(this).val().toUpperCase();
        $('#serviceCheckboxes li').each(function () {

            var label = $(this).find('label').text().toUpperCase();
            $(this).toggle(label.includes(filter));
        });
    });

    /* Add and Remove Service*/
    function AddService(serviceName) {
        $.ajax({
            url: "/Home/AddService",
            type: "POST",
            data: { serviceName: serviceName },
            success: function () {
                var $servicesTable = $('#servicesTable');
                $servicesTable.find('tbody').prepend($newRows);
            },
            error: function (xhr, textStatus, errorThrown) {
                alert('Error adding service');
            }
        }).then(function () {
            SynchServiceTB();
        }).catch(function (error) {
            console.error('Failed to get the total number of monitored services.', error);
        });
    }


    function RemoveAddedService1(serviceName) {
        /*Show the confirmation box here*/
        $.ajax({
            url: "/Home/DeleteAddedService",
            type: "POST",
            data: { serviceName: serviceName },
            success: function () {
                ServicesInMonitor();
            },
            error: function (xhr, textStatus, errorThrown) {
                alert("Failed to delete " + serviceName);
            }
        }).then(function () {
            SynchServiceTB();
        });
    }

    function RemoveAddedService(serviceName, command) {
        /*Show the confirmation box here*/
        var modal = document.getElementById("alert-modal");
        var modalTitle = document.getElementById("modal-title");
        var modalMessage = document.getElementById("modal-message");
        var btnYes = document.getElementById("btnYes");
        var btnNo = document.getElementById("btnNo");

        modal.style.display = "block";
        modalTitle.innerHTML = "<i class='bi bi-exclamation-triangle-fill text-warning'></i> System Message";
        modalMessage.innerHTML = "Are you sure you want to " + command.toUpperCase() + " '" + serviceName + "'?";
        btnYes.onclick = function () {
            $.ajax({
                url: "/Home/DeleteAddedService",
                type: "POST",
                data: { serviceName: serviceName, command: command },
                success: function () {
                    ServicesInMonitor();
                    var commandText = command.toUpperCase();
                    if (command === "delete") {
                        commandText = "DELETED";
                    }

                    var toast = new bootstrap.Toast(document.getElementById('liveToast'));
                    var toastMessage = "You " + commandText + " the service " + "' " + serviceName + " '" + ".";
                    document.querySelector('.toast-body').innerHTML = toastMessage;

                    if (commandText === "DELETED") {
                        // set background color to red if commandText is Deleted
                        toast._element.classList.remove("bg-success");
                        toast._element.classList.add("bg-danger");
                    }

                    toast.show();

                    setTimeout(function () {
                        toast.dispose();
                    }, 4000);
                },
                error: function () {
                    alert("Failed to delete " + serviceName);
                }
            }).then(function () {
                ServicesAvailable();
            });
            modal.style.display = "none";
        }
        btnNo.onclick = function () {
            modal.style.display = "none";
        }
    }
</script>

<script>
    let indexPage = 1;
    let paginationService = document.querySelector(".paginationService ul");
    let totalPages;

    function getMonitoredServicesCount() {
        return new Promise((resolve, reject) => {
            $.ajax({
                url: '/Home/GetMonitoredServicesCount',
                type: 'GET',
                dataType: 'json',
                success: function (result) {
                    resolve(result.totalMonitoredServices);
                },
                error: function () {
                    reject("Failed to get the total number of monitored services.");
                }
            });
        });
    }
    
    function generatePageNumbers() {
        getMonitoredServicesCount()
            .then(function (totalMonitoredServices) {
                totalPages = Math.ceil(totalMonitoredServices / ITEMS_PER_PAGE);
                paginationService.innerHTML = '';

                let maxVisiblePages = 5;
                let startPage = indexPage - Math.floor(maxVisiblePages / 2);
                let endPage = startPage + maxVisiblePages - 1;

                if (startPage < 1) {
                    startPage = 1;
                    endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                }

                if (endPage > totalPages) {
                    endPage = totalPages;
                    startPage = Math.max(1, endPage - maxVisiblePages + 1);
                }

                if (indexPage > 1) {
                    paginationService.innerHTML = `<li class="page-item" id="previous-link"><a class="page-link">Previous</a></li>`;
                }

                for (let i = startPage; i <= endPage; i++) {
                    paginationService.innerHTML += `<li class="page-item"><a class="page-link" data-page="${i}">${i}</a></li>`;
                }

                if (indexPage < totalPages) {

                    paginationService.innerHTML += `<li class="page-item" id="next-link"><a class="page-link">Next</a></li>`;
                }

                if (indexPage < totalPages) {
                    document.getElementById("next-link").addEventListener("click", function () {
                        indexPage = indexPage + 1;
                        showPageServiceTB(indexPage);
                        generatePageNumbers();
                    });
                }

                if (indexPage > 1) {
                    document.getElementById("previous-link").addEventListener("click", function () {
                        indexPage = indexPage - 1;
                        showPageServiceTB(indexPage);
                        generatePageNumbers();
                    });
                }

                // Add click event listener to the page number elements
                document.querySelectorAll(".paginationService .page-link").forEach(function (pageLink) {
                    const pageNumber = parseInt(pageLink.getAttribute("data-page"));
                    if (pageNumber) {
                        pageLink.addEventListener("click", function () {
                            indexPage = pageNumber;
                            showPageServiceTB(indexPage);
                            generatePageNumbers();
                        });
                    }
                });

                document.getElementById('current-page').textContent = indexPage;
                document.getElementById('total-pages').textContent = totalPages;
            })
            .catch(function (error) {
                alert(error);
            });
    }

    // get the table body element
    const tableBody = document.querySelector('#serviceTable tbody');

    // get the pagination links
    const paginationLinks = document.querySelectorAll('.paginationService li');

    // define a function to show the items for the selected page
    function showPageServiceTB(pageNumber) {
        // calculate the start and end indexes of the items to show
        const startIndex = (pageNumber - 1) * ITEMS_PER_PAGE;
        const endIndex = startIndex + ITEMS_PER_PAGE;

        // hide all rows in the table
        const rows = tableBody.querySelectorAll('tr');
        rows.forEach(row => {
            row.style.display = 'none';
        });

        // show the rows for the current page
        for (let i = startIndex; i < endIndex && i < rows.length; i++) {
            rows[i].style.display = '';
        }
        generatePageNumbers();
    }

</script>
