@model LoginAndRegisterASPMVC5.Models.User
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<body class="bgcolor">
    <!-- Nav Bar with Responsive -->
    <header>
        <div class="container-fluid">
            <div class="navb-name">
                MLM Service Monitoring System
            </div>

            <div class="navb-items d-none d-xl-flex">
                <div class="menu-item">
                    <a href="@Url.Action("Index","Home")" class="navbar">Home</a>
                </div>

                <div class="menu-item">
                    <a href="@Url.Action("Users","Home")" class="navbar active">Users</a>
                </div>

                <div class="item-button">
                    <a href="@Url.Action("Logout","Home")" type="button">Logout</a>
                </div>
            </div>

            <!-- Button trigger modal (Responsive) -->
            <div class="mobile-toggler d-lg-none">
                <a href="#" data-bs-toggle="modal" data-bs-target="#navbModal">
                    <i class="bi bi-list"></i>
                </a>
            </div>

            <!-- Modal (Responsive) -->
            <div class="modal fade" style="width: 500px;" id="navbModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="title">MLM Service Monitoring System</div>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><i class="bi bi-x-lg"></i></button>
                        </div>

                        <div class="modal-body">
                            <div class="modal-line">
                                <a href="@Url.Action("Index","Home")" class="btn btn-primary"><i class="bi bi-house"></i> Home</a>
                            </div>

                            <div class="modal-line">
                                <a href="@Url.Action("Users","Home")" class="btn btn-primary"><i class="bi bi-bell"></i>Users</a>
                            </div>

                            <a href="@Url.Action("Logout","Home")" class="navb-button" type="button">Logout</a>
                        </div>

                        <div class="mobile-modal-footer">
                            <a target="_blank" href="#"><i class="bi bi-instagram"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-linkedin"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-youtube"></i></a>
                            <a target="_blank" href="#"><i class="bi bi-facebook"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Users Table -->
    <div class="container-xl">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-6">
                            <h2><b>List of Users</b></h2>
                        </div>
                        @*<div class="col-sm-6 button-container">
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addUsers-modal"><i class="bi bi-plus-circle"></i><span>Add Users</span></button>
                            </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-hover" id="usersTable">
        <thead>
            <tr>
                <th scope="col" style="width: 15%;">FIRST NAME</th>
                <th scope="col" style="width: 15%;">LAST NAME</th>
                <th scope="col" style="width: 10%;">EMAIL ADDRESS</th>
                <th scope="col" style="width: 10%;">USER ROLE</th>
                <th scope="col" style="width: 15%;">ACTION</th>
            </tr>
        </thead>
        <tbody>
            <!-- table content goes here -->
        </tbody>
    </table>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="nonAdminRow">
                    <div class="btn_nonAdminRow">
                        <span class="sBtn_nonAdminRow">Select row</span>
                        <i class="bi bi-arrow-down-short"></i>
                    </div>

                    <ul class="options_nonAdminRow">
                        <li class="option_nonAdmin">
                            <span class="option_nonAdmin-text">5 rows</span>
                        </li>
                        <li class="option_nonAdmin">
                            <span class="option_nonAdmin-text">10 rows</span>
                        </li>
                        <li class="option_nonAdmin">
                            <span class="option_nonAdmin-text">15 rows</span>
                        </li>
                        <li class="option_nonAdmin">
                            <span class="option_nonAdmin-text">20 rows</span>
                        </li>
                        <li class="option_nonAdmin">
                            <span class="option_nonAdmin-text">All rows</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-md-4">
                <div class="hint-text">Page <b>1</b> out of <b>5</b></div>
            </div>
            <div class="col-md-4">
                <ul class="pagination">
                    <li class="page-item"><a href="#" class="page-link">Previous</a></li>
                    <li class="page-item active"><a href="#" class="page-link">1</a></li>
                    <li class="page-item"><a href="#" class="page-link">2</a></li>
                    <li class="page-item"><a href="#" class="page-link">3</a></li>
                    <li class="page-item"><a href="#" class="page-link">4</a></li>
                    <li class="page-item"><a href="#" class="page-link">5</a></li>
                    <li class="page-item"><a href="#" class="page-link">Next</a></li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Selecting Rows Dropdown for Users (Non-Admin) Table -->
    <script>
        const optionMenu2 = document.querySelector(".nonAdminRow"),
            select_btn2 = optionMenu2.querySelector(".btn_nonAdminRow"),
            options2 = optionMenu2.querySelectorAll(".option_nonAdmin"),
            sBtn_text2 = optionMenu2.querySelector(".sBtn_nonAdminRow");

        select_btn2.addEventListener("click", () => optionMenu2.classList.toggle("active"));

        options2.forEach(option => {
            option.addEventListener("click", () => {
                let selectedOption = option.querySelector(".option_nonAdmin-text").innerText;
                sBtn_text2.innerText = selectedOption;

                optionMenu2.classList.remove("active");
            });
        });
    </script>

    <!-- Show Modal -->
    <script>
        var myModal = new bootstrap.Modal(document.getElementById('signup-modal'));
        myModal.show();
    </script>

    <!-- Tooltip, Refresh Table, Show Password, etc -->
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        $(document).ready(function () {
            RealTimeUsersTable();
        });

        const togglePassword = document.getElementById("togglePassword");
        const password = document.getElementById("password");

        togglePassword.addEventListener("change", function () {
            if (togglePassword.checked) {
                password.type = "text";
            } else {
                password.type = "password";
            }
        });
    </script>

    <!-- Pagination for Users Table -->
    <script>
        // define the number of items per page
        const ITEMS_PER_PAGE = 5;

        // get the table body element
        const tableBody = document.querySelector('#usersTable tbody');

        // get the pagination links
        const paginationLinks = document.querySelectorAll('.pagination .page-link');

        // define a function to show the items for the selected page
        function showPage(pageNumber) {
            // calculate the start and end indexes of the items to show
            const startIndex = (pageNumber - 1) * ITEMS_PER_PAGE;
            const endIndex = startIndex + ITEMS_PER_PAGE;

            // hide all rows in the table
            const rows = tableBody.querySelectorAll('tr');
            rows.forEach(row => {
                row.style.display = 'none';
            });

            // show the rows for the current page
            for (let i = startIndex; i < endIndex && i < rows.length; i++) {
                rows[i].style.display = '';
            }
        }

        function RealTimeUsersTable() {
            /*Refresh the table with the updated data*/
            $.ajax({
                url: "/Home/RealTimeUsersTable",
                type: "GET",
                dataType: 'json',
                success: function (result) {
                    $("#usersTable tbody").empty();
                    // Loop through the data and append each row to the table
                    result.forEach(function (Data) {
                        const Role = (Data.IsAdmin === true) ? '<span>Admin</span>' : '<span>Non-Admin</span>';

                        var row = "<tr data-toggle='modal' data-target='#service-modal'>";
                        row += "<td>" + Data.idUser + "</td>";
                        row += "<td>" + Data.FirstName + "</td>";
                        row += "<td>" + Data.LastName + "</td>";
                        row += "<td>" + Data.Email + "</td>";
                        row += "<td>" + Role + "</td>";
                        row += "<td>";
                        if (Data.Email_Notification == true) {
                            row += "<button onclick='setNotification(\"" + Data.idUser + "\")' class='user-button btn-green' id='btnSet' data-bs-toggle='tooltip' data-bs-placement='top' title='Set Email On'>";
                            row += "<i class='bi bi-envelope-check-fill'></i>";
                            row += "</button>";
                        } else {
                            row += "<button onclick='setNotification(\"" + Data.idUser + "\")' class='user-button btn-red' id='btnSet' data-bs-toggle='tooltip' data-bs-placement='top' title='Set Email Off'>";
                            row += "<i class='bi bi-envelope-x-fill'></i>";
                            row += "</button>";
                        }
                        row += "</td></tr>";
                        $("#usersTable tbody").append(row);
                    });
                },
                error: function () {
                    alert("Failed to refresh users.");
                }
            });
        }

        // show the first page by default
        $(document).ready(function () {
            RealTimeUsersTable().then(function () {
                showPage(pageNumber);
            });
        });

        function setNotification(idUser) {
            $.ajax({
                type: 'POST',
                url: '/Home/UpdateEmailNotification',
                data: { idUser: idUser },
                success: function () {
                    $(document).ready(function () {
                        RealTimeUsersTable().then(function () {
                            showPage(pageNumber);
                        });
                    });
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        var pageNumber = 1;
        // handle the click event of the pagination links
        paginationLinks.forEach(link => {
            link.addEventListener('click', event => {
                event.preventDefault();
                // get the selected page number from the link's text
                pageNumber = parseInt(link.innerText);

                // show the items for the selected page
                showPage(pageNumber);

                // mark the selected page as active
                paginationLinks.forEach(link => {
                    link.parentElement.classList.remove('active');
                });
                link.parentElement.classList.add('active');
            });
        });
    </script>

</body>


