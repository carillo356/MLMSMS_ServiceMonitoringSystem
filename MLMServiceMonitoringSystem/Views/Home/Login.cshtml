@model LoginAndRegisterASPMVC5.Models.UserLogin
@{
    ViewBag.Title = "MLM Login";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<!-- Login Module -->
<body class="gradient-page">

    @if (!string.IsNullOrEmpty(ViewBag.error))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong><i class="fa fa-exclamation"></i> Error!</strong> <span>@ViewBag.error</span>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
        <div class="container-fluid" style="width: 80%;">
            <div class="row justify-content-center">
                <div class="col-lg-4 col-md-6 col-sm-8 mx-auto">
                    <div class="card p-3 rounded-3 w-100">
                        <div class="card-body">
                            <div class="text-center">
                                <h1 class="display-4">MLM</h1>
                                <h4 class="fw-light">Service Monitoring System</h4>
                                <hr />
                                <h2 class="fw-normal">Sign in</h2>

                                @if (!string.IsNullOrEmpty(ViewBag.validation))
                                {
                                   <span>@ViewBag.validation</span>
                                }
                            </div>
                            @using (Html.BeginForm("Login", "Home", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.Email, new { @class = "form-label mb-2" })
                                    @Html.TextBoxFor(m => m.Email, "", new { @class = "form-control my-1", @placeholder = "Email", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "badge badge-danger" })
                                </div>
                                <div class="form-group mb-4 position-relative">
                                    @Html.LabelFor(m => m.Password, new { @class = "form-label my-2" })
                                    <div class="position-relative">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control my-1", @placeholder = "Password", id = "password" })
                                        <span toggle="#password" class="bi bi-eye-slash-fill mt-1 fieldIcon_login toggle-password"></span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "badge badge-danger" })
                                </div>
                                <div class="form-group text-center">
                                    <button type="submit" name="submit" class="btn btn-secondary" value="Login">Login</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<!-- Show/Hide Password with eye icon -->
<script>
    $(".toggle-password").click(function () {
        var input = $($(this).attr("toggle"));
        if (input.attr("type") == "password") {
            input.attr("type", "text");
            $(this).removeClass("bi-eye-slash-fill").addClass("bi-eye-fill");
        } else {
            input.attr("type", "password");
            $(this).removeClass("bi-eye-fill").addClass("bi-eye-slash-fill");
        }
    });
</script>




